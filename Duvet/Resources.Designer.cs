//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duvet {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Duvet.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * {
        ///  margin: 0;
        ///  padding: 0;
        ///}
        ///
        ///body {
        ///  background-color: #fff;
        ///  font-family: helvetica neue, tahoma, arial, sans-serif;
        ///  font-size: 82%;
        ///  color: #151515;
        ///}
        ///
        ///h1 {
        ///  margin: 0.5em 0;
        ///  color: #010101;
        ///  font-weight: normal;
        ///  font-size: 18px;
        ///}
        ///
        ///h2 {
        ///  margin: 0.5em 0;
        ///  color: #010101;
        ///  font-weight: normal;
        ///  font-size: 16px;
        ///}
        ///
        ///a {
        ///  color: #1564C2;
        ///  text-decoration: none;
        ///}
        ///
        ///a:hover {
        ///  text-decoration: underline;
        ///}
        ///
        ///i {
        ///  background-color: #eee;
        ///}
        ///
        ///span.separator {
        ///  color: #9BA9BA;
        ///  padding-lef [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string coverage {
            get {
                return ResourceManager.GetString("coverage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var hljs=new function(){function m(p){return p.replace(/&amp;/gm,&quot;&amp;amp;&quot;).replace(/&lt;/gm,&quot;&amp;lt;&quot;)}function c(r,q,p){return RegExp(q,&quot;m&quot;+(r.cI?&quot;i&quot;:&quot;&quot;)+(p?&quot;g&quot;:&quot;&quot;))}function j(r){for(var p=0;p&lt;r.childNodes.length;p++){var q=r.childNodes[p];if(q.nodeName==&quot;CODE&quot;){return q}if(!(q.nodeType==3&amp;&amp;q.nodeValue.match(/\s+/))){break}}}function g(t,s){var r=&quot;&quot;;for(var q=0;q&lt;t.childNodes.length;q++){if(t.childNodes[q].nodeType==3){var p=t.childNodes[q].nodeValue;if(s){p=p.replace(/\n/g,&quot;&quot;)}r+=p}else{if(t.childNodes[q].nodeName= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string highlight_pack {
            get {
                return ResourceManager.GetString("highlight_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        ///Intellij Idea-like styling (c) Vasily Polovnyov &lt;vast@whiteants.net&gt;
        ///
        ///*/
        ///
        ///pre code {
        ///  display: block; padding: 0.5em;
        ///  color: #000;
        ///  background: #fff;
        ///}
        ///
        ///pre .subst,
        ///pre .title {
        ///  font-weight: normal;
        ///  color: #000;
        ///}
        ///
        ///pre .comment,
        ///pre .template_comment,
        ///pre .javadoc,
        ///pre .diff .header {
        ///  color: #808080;
        ///  font-style: italic;
        ///}
        ///
        ///pre .annotation,
        ///pre .decorator,
        ///pre .preprocessor,
        ///pre .doctype,
        ///pre .pi,
        ///pre .chunk,
        ///pre .shebang,
        ///pre .apache .cbracket,
        ///pre .input_number {
        ///  color: #808000;
        ///}
        ///
        ///pre .t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string idea {
            get {
                return ResourceManager.GetString("idea", resourceCulture);
            }
        }
    }
}
